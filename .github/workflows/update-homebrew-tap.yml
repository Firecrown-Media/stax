name: Update Stax Homebrew Tap

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on new tags like v1.0.0
  workflow_dispatch:

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout stax repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for tags

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'

      - name: Build Stax for various architectures and get checksums
        id: build_checksums
        run: |
          mkdir -p build
          
          # Get version from tag
          VERSION="${GITHUB_REF_NAME#v}"
          echo "STAX_VERSION=${VERSION}" >> $GITHUB_ENV

          # Build for macOS (amd64)
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X github.com/Firecrown-Media/stax/cmd.Version=${{ env.STAX_VERSION }}" -o build/stax-darwin-amd64
          DARWIN_AMD64_SHA=$(shasum -a 256 build/stax-darwin-amd64 | awk '{print $1}')
          echo "darwin_amd64_sha=${DARWIN_AMD64_SHA}" >> $GITHUB_OUTPUT

          # Build for macOS (arm64)
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X github.com/Firecrown-Media/stax/cmd.Version=${{ env.STAX_VERSION }}" -o build/stax-darwin-arm64
          DARWIN_ARM64_SHA=$(shasum -a 256 build/stax-darwin-arm64 | awk '{print $1}')
          echo "darwin_arm64_sha=${DARWIN_ARM64_SHA}" >> $GITHUB_OUTPUT

          # Build for Linux (amd64)
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X github.com/Firecrown-Media/stax/cmd.Version=${{ env.STAX_VERSION }}" -o build/stax-linux-amd64
          LINUX_AMD64_SHA=$(shasum -a 256 build/stax-linux-amd64 | awk '{print $1}')
          echo "linux_amd64_sha=${LINUX_AMD64_SHA}" >> $GITHUB_OUTPUT

      - name: Create Release and Upload Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create release
          gh release create v${{ env.STAX_VERSION }} \
            --title "Release v${{ env.STAX_VERSION }}" \
            --notes "Release v${{ env.STAX_VERSION }}" \
            --target ${{ github.sha }}

          # Upload assets
          gh release upload v${{ env.STAX_VERSION }} \
            build/stax-darwin-amd64 \
            build/stax-darwin-arm64 \
            build/stax-linux-amd64

      - name: Checkout homebrew-stax repository
        uses: actions/checkout@v3
        with:
          repository: Firecrown-Media/homebrew-stax
          token: ${{ secrets.PAT }} # Personal Access Token with repo scope
          path: homebrew-stax

      - name: Update Homebrew Formula
        run: |
          cd homebrew-stax
          FORMULA_PATH="Formula/stax.rb"
          
          # Create Formula directory if it doesn't exist
          mkdir -p Formula

          # If the formula file doesn't exist, create it with a basic template
          if [ ! -f "$FORMULA_PATH" ]; then
            cat > "$FORMULA_PATH" << 'FORMULA_EOF'
          class Stax < Formula
            desc "CLI tool for web development with DDEV and WordPress"
            homepage "https://github.com/Firecrown-Media/stax"
            version "${{ env.STAX_VERSION }}"
            
            if OS.mac? && Hardware::CPU.intel?
              url "https://github.com/Firecrown-Media/stax/releases/download/v${{ env.STAX_VERSION }}/stax-darwin-amd64"
              sha256 "${{ steps.build_checksums.outputs.darwin_amd64_sha }}"
            end
            if OS.mac? && Hardware::CPU.arm?
              url "https://github.com/Firecrown-Media/stax/releases/download/v${{ env.STAX_VERSION }}/stax-darwin-arm64"
              sha256 "${{ steps.build_checksums.outputs.darwin_arm64_sha }}"
            end
            if OS.linux? && Hardware::CPU.intel?
              url "https://github.com/Firecrown-Media/stax/releases/download/v${{ env.STAX_VERSION }}/stax-linux-amd64"
              sha256 "${{ steps.build_checksums.outputs.linux_amd64_sha }}"
            end

            def install
              bin.install "stax-darwin-amd64" => "stax" if OS.mac? && Hardware::CPU.intel?
              bin.install "stax-darwin-arm64" => "stax" if OS.mac? && Hardware::CPU.arm?
              bin.install "stax-linux-amd64" => "stax" if OS.linux? && Hardware::CPU.intel?
            end

            test do
              system "#{bin}/stax", "--version"
            end
          end
          FORMULA_EOF
          else
            # Update existing formula - recreate it to ensure consistency
            rm "$FORMULA_PATH"
            cat > "$FORMULA_PATH" << 'FORMULA_EOF'
          class Stax < Formula
            desc "CLI tool for web development with DDEV and WordPress"
            homepage "https://github.com/Firecrown-Media/stax"
            version "${{ env.STAX_VERSION }}"
            
            if OS.mac? && Hardware::CPU.intel?
              url "https://github.com/Firecrown-Media/stax/releases/download/v${{ env.STAX_VERSION }}/stax-darwin-amd64"
              sha256 "${{ steps.build_checksums.outputs.darwin_amd64_sha }}"
            end
            if OS.mac? && Hardware::CPU.arm?
              url "https://github.com/Firecrown-Media/stax/releases/download/v${{ env.STAX_VERSION }}/stax-darwin-arm64"
              sha256 "${{ steps.build_checksums.outputs.darwin_arm64_sha }}"
            end
            if OS.linux? && Hardware::CPU.intel?
              url "https://github.com/Firecrown-Media/stax/releases/download/v${{ env.STAX_VERSION }}/stax-linux-amd64"
              sha256 "${{ steps.build_checksums.outputs.linux_amd64_sha }}"
            end

            def install
              bin.install "stax-darwin-amd64" => "stax" if OS.mac? && Hardware::CPU.intel?
              bin.install "stax-darwin-arm64" => "stax" if OS.mac? && Hardware::CPU.arm?
              bin.install "stax-linux-amd64" => "stax" if OS.linux? && Hardware::CPU.intel?
            end

            test do
              system "#{bin}/stax", "--version"
            end
          end
          FORMULA_EOF
          fi

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$FORMULA_PATH"
          git commit -m "stax: update to ${{ env.STAX_VERSION }}" || echo "No changes to commit"
          git push
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.PAT }}
